<?xml version="1.0" encoding="UTF-8"?>
 
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<bean id="notificationService" class="com.homefellas.batch.NotificationService" >
		
	</bean>

  	
 	<bean id="propertyPlaceholderConfigurer" class="com.homefellas.util.AbsolutePathPropertyPlaceholderConfigurer">
		<property name="basePropertiesHome" value="C:/workspace/sts/rm_ws/hf-build/properties/"/>
		<property name="locations">
			<list>
				<value>core.properties</value>
				<value>location.properties</value>
				<value>metrics.properties</value>
				<value>rm.properties</value>
			</list>
		</property>
	</bean>
 	
 
	


	
	
	
	
 

<!-- Transaction Manager -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager"/> -->
	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj" />

	
	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean> 

 	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
			<property name="url" value="jdbc:hsqldb:mem:mydb;sql.enforce_strict_size=false;ifxeists=true" />
			
			<property name="username" value="sa" />
			<property name="password" value="" />
		</bean>

	<bean id="mySessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource"/>
		</property>
		<property name="configLocations">
            <list>
                <!-- <value>classpath*:main/resource/conf/hibernate/*.cfg.xml</value> -->
                <value>classpath*:main/resource/conf/hibernate/login.cfg.xml</value>
                <value>classpath*:main/resource/conf/hibernate/metric.cfg.xml</value>
                <value>classpath*:main/resource/conf/hibernate/rm.cfg.xml</value>
                <value>classpath*:com/homefellas/conf/hibernate/user.cfg.xml</value>
                <value>classpath*:main/resource/conf/hibernate/batch.cfg.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${db.unittest.dialect}</prop>
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->

				<prop key="hibernate.hbm2ddl.auto">update</prop>		
        		<prop key="hibernate.show_sql">false</prop>
				<!-- Botlist default for format_sql should be 'false' -->
				<prop key="hibernate.format_sql">${hibernate.formatSql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generateStatistics}</prop>
				<!-- ============================================= -->

				<!-- Caching Properties -->
				<prop key="hibernate.cache">${hibernate.cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${cache.use_query_cache}</prop>
				
				<prop key="hibernate.cache.provider_class">${hibernate.cacheProviderClass}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
			

			</props>
		</property>
	</bean>
 				
</beans>