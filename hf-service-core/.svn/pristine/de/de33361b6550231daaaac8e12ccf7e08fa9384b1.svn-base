<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.2.xsd"
   	>
   	
   	<import resource="classpath:main/resource/conf/hibernate-context.xml"/>
<!--    	<import resource="classpath:main/resource/conf/neo4j-context.xml"/> -->
<!--    	<import resource="classpath:main/resource/conf/mongodb-context.xml"/> -->
   	
	<bean id="springBean" abstract="true" init-method="init" destroy-method="destroy"/>
	
    <bean id="printSql" class="java.lang.Boolean" >
		<constructor-arg value="${hibernate.showSql}"/>
	</bean>

 	
 
	<bean id="abstractService" abstract="true" parent="springBean">
		<property name="dao" ref="dao"/>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="cacheProvider" ref="cacheProvider"/>
		<property name="emailTemplateHomeDirectory" value="${email.template.home}"/>
		<property name="velocityEngine" ref="velocityEngine"/>
	</bean>
	
	<bean id="abstractValidator" abstract="true" parent="springBean">
	
	</bean>
	

	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
  		<property name="defaultEncoding" value="${defaultEncoding}" />
		<property name="host" value="${mail.smtps.host}" />
		<property name="port" value="${mail.smtps.port}" />
		<property name="protocol" value="${mail.protocol}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtps.auth">${mail.smtps.auth}</prop>
				<prop key="mail.smtps.starttls.enable">${mail.smtps.starttls.enable}</prop>
				<prop key="mail.smtps.debug">${mail.smtps.debug}</prop>
				<prop key="mail.smtp.socketFactory.class">${mail.smtp.socketFactory.class}</prop>
	            <prop key="mail.smtp.socketFactory.fallback">${mail.smtp.socketFactory.fallback}</prop>
	            <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="notificationDao" class="com.homefellas.batch.NotificationDao" parent="abstractDao">
	
	</bean>
	
	<bean id="notificationService" class="com.homefellas.batch.NotificationService" parent="abstractService">
		<property name="notificationDao" ref="notificationDao"/>
	</bean>
	
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
 
      <property name="velocityProperties">
         <value>
            resource.loader=file
            class.resource.loader.class=org.apache.velocity.runtime.resource.loader.FileResourceLoader
            file.resource.loader.path=
         </value>
      </property>      
   </bean>
   
   <bean id="cacheProvider" class="com.homefellas.cache.ehcache.EhCacheProvider" >
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
<!-- 	<ehcache:annotation-driven cache-manager="cacheManager" proxy-target-class="false"/> -->
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" >
		<property name="configLocation" value="${ehcache.configurationResourceName}"/>
		<!-- <property name="configLocation" value="classpath:info/makeyourpicks/support/cache/CacheConfiguration.xml"/> -->
	</bean>
	

<!-- Transaction Manager -->
	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj"/>
	
	<bean id="ehCacheMBeanRegistration" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	  		<property name="staticMethod" value="net.sf.ehcache.management.ManagementService.registerMBeans"/>
	  		<property name="arguments">
	    		<list>
	      			<ref bean="cacheManager"/>
	      			<ref bean="mbeanServer"/>
	      			<value>true</value>
	     	 		<value>true</value>
	      			<value>true</value>
	      			<value>true</value>
	    		</list>
	  		</property>
		</bean>
		
	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
  		<property name="locateExistingServerIfPossible" value="true"/>
	</bean>			

 
</beans>
